#!/usr/bin/env python3

import argparse
import subprocess
import sys
import os

def main():
	parser = argparse.ArgumentParser(description="DeepMobilome {predict, prep, shuffle, train} [options]")

	script_dir = os.path.dirname(os.path.abspath(__file__))

	#Model
	trained_model = os.path.join(script_dir,"DeepMobilome_weight.h5")
	

	subparsers = parser.add_subparsers(dest="command",required=True, help="Available commands")

	#Subparser for predict
	predict_parser= subparsers.add_parser("predict",help="[Predict] Run DeepMobilome_predict.py script: Predict target presence")
	predict_parser.add_argument("-i","--inFile",dest="inFile",metavar="FILE",required=True, help="sam File : sample reads aligned to target sequence")
	predict_parser.add_argument("-o","--outFile",dest="outFile",metavar="FILE",required=True,help="output File predicted result")
	predict_parser.add_argument("-l","--logFile",dest="logFile",metavar="FILE",required=True,help="log File")
	predict_parser.add_argument("-r","--ref",dest="ref",metavar="FILE",required=True, help="Target sequence file")
	predict_parser.add_argument("-c","--count",dest = "count",required=True, help ="read count list",)
	predict_parser.add_argument("-a","--ans",dest= "ans",metavar ="FILE", help = "Answer of the given case, samplename and answer, csv file",required=True)
	predict_parser.add_argument("-s","--save", dest="save",help="load model", required=True)


	#Subparser for preprocess
	prep_parser = subparsers.add_parser("prep", help ="[Train] Run DeepMobilome_prep.py script: From sam file to plk file")
	prep_parser.add_argument("-i","--inFile",dest="inFile",metavar="FILE",required=True, help="sam File list")
	prep_parser.add_argument("-in","--inDir",dest="inDir",metavar="DIR", required=True,help="sam File directory")
	prep_parser.add_argument("-o","--outPre",dest="outPre",metavar="FILE",required=True,help="output File prefix {outPre}.log, {outPre}.plk")
	prep_parser.add_argument("-r","--ref",dest="ref",metavar="FILE",required=True, help="bowtie reference file")
	prep_parser.add_argument("-c","--count",dest = "count",required=True, help ="read count list",)
	prep_parser.add_argument("-a","--ans",dest= "ans",metavar ="FILE", help = "Answer of the given case, samplename and answer, csv file",required=True)
	prep_parser.add_argument("-nm","--nm",dest="nm",default = 0.9, help = "mapped read nm ratio default : 0.9", type =float)
	prep_parser.add_argument("-s","--sr",dest = "sr",default = 0.5, help = "soft clipped ratio defalut : 0.5", type = float)

	#Subparser for shuffle
	prep_parser = subparsers.add_parser("shuffle", help ="[Train/Optional] Run DeepMobilome_shuffle.py script: Shuffle and write new plk files")
	prep_parser.add_argument("-i","--inFile",dest="inFile",metavar="FILE",required=True, help="plk file list")
	prep_parser.add_argument("-in","--inDir",dest="inDir",metavar="DIR", required=True,help="input plk directory")
	prep_parser.add_argument("-o","--outPre",dest="outPre",metavar="FILE",required=True,help="output prefix")
	prep_parser.add_argument("-b","--batch",dest="batch",default = 256, help = "batch size : default 256", type =int)
	prep_parser.add_argument("-s","--sfl",dest = "sfl",default = 100, help = "number of lines to shuffle : default 100", type = int)

	#Subparser for train
	prep_parser = subparsers.add_parser("train", help ="[Train] Run DeepMobilome_train.py script: Train model")
	prep_parser.add_argument("-i","--inFile",dest="inFile",metavar="FILE",required=True, help="plk file list")
	prep_parser.add_argument("-in","--inDir",dest="inDir",metavar="DIR", required=True,help="input plk directory")
	prep_parser.add_argument("-o","--outPre",dest="outPre",metavar="FILE",required=True,help="output prefix")


	args = parser.parse_args()

	if args.command =="prep":
		script_path = os.path.join(script_dir,"DeepMobilome_prep.py")
		cmd = ["python",script_path,"-i",args.inFile,"-in",args.inDir,"-o",args.outPre,"-r",args.ref,"-c",args.count,"-a",args.ans]
		if args.nm:
			cmd+=["-nm",str(args.nm)]
		if args.sr:
			cmd+=["-s",str(args.sr)]
	if args.command=="shuffle":
		script_path = os.path.join(script_dir,"DeepMobilome_shuffle.py")
		cmd = ["python",script_path,"-i",args.inFile,"-in",args.inDir,"-o",args.outPre,"-b",str(args.batch),"-s",str(args.sfl)]
		if args.batch:
			cmd+=["-b",str(args.batch)]
		if args.sfl:
			cmd+=["-s",str(args.sfl)]
	if args.command=="train":
		script_path = os.path.join(script_dir,"DeepMobilome_train.py")
		cmd = ["python",script_path,"-i",args.inFile,"-in",args.inDir,"-o",args.outPre]
	if args.command=="predict":
		script_path = os.path.join(script_dir,"DeepMobilome_predict.py")
		cmd = ["python",script_path,"-i",args.inFile,"-o",args.outFile,"-l",args.logFile,"-r",args.ref,"-r",args.ref,"-c",args.count,"-a",args.ans,"-s",args.save]
		
		


	subprocess.run(cmd)

if __name__=="__main__":
	main()

